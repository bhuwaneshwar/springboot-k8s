name: springboot-k8s

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write
  actions: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: bhuwaneshwar/azurerepo
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > $HOME/.kube/config

      - name: Deploy Deployment & Service to Kubernetes
        run: |
          kubectl apply -f deployment.yaml

          # Create the LoadBalancer service inline (if service.yaml is not in repo)
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: springboot-service
          spec:
            type: LoadBalancer
            selector:
              app: springboot-k8s
            ports:
              - protocol: TCP
                port: 80
                targetPort: 8080
          EOF

          # Wait for deployment rollout
          kubectl rollout status deployment/springboot-k8s

      - name: Get external IP (optional debug)
        run: |
          echo "Waiting for external IP..."
          sleep 60  # give time for IP assignment
          kubectl get service springboot-service
